//{ Driver Code Starts
// Initial Template for C++
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    
    int find(vector<int>& nums,int n,int mid){
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=(nums[i]/mid);
        
        if(nums[i]%mid !=0){
            sum+=1;
        }
        }
        
        return sum;
    }
  
  
  
  
  
    int smallestDivisor(vector<int>& nums, int k) {

        // Write your code here.
        int n=nums.size();
        int low=1;
        int high=nums[0];
        for(int i=0;i<n;i++){
            if(nums[i]>high)
              high=nums[i];
        }
        int ans=high;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(find(nums,n,mid)<=k){
                ans=mid;
                high=mid-1;
                
            }
            else{
                low=mid+1;
            }
        }
    }
};


//{ Driver Code Starts.
int main() {
    int t = 1;
    cin >> t;

    // freopen ("output_gfg.txt", "w", stdout);

    while (t--) {
        // Input
        int n, k;
        cin >> n >> k;
        vector<int> vec(n);
        for (int i = 0; i < n; i++) cin >> vec[i];

        Solution obj;
        cout << obj.smallestDivisor(vec, k) << endl;
        // cout << "~\n";
    }
    // fclose(stdout);

    return 0;
}
// } Driver Code Ends

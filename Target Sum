//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//Back-end complete function Template for C++

class Solution {
    private:
        int f(int i,int target,vector<int>& arr,vector<vector<int>>& dp){
            if(i==0){
                if(target==0 && arr[0]==0) return 2;
                else if(target==0 || target==arr[0]) return 1;
                return 0;
            }
            
            if(dp[i][target]!=-1) return dp[i][target];
            
            int notTake=f(i-1,target,arr,dp);
            int take=0;
            if(arr[i]<=target) take=f(i-1,target-arr[i],arr,dp);
            
            return dp[i][target]=(take+notTake);
        }
    
  public:
    int findTargetSumWays(vector<int>&arr ,int d) {
        //Your code here
        int n=arr.size();
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
        }
        
        if(sum-d<0) return 0;
        if((sum-d)%2) return 0;
        int s=(sum-d)/2;
        vector<vector<int>> dp(n,vector<int>(s+1,-1));
        
        
        
        return f(n-1,s,arr,dp);
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        
        cin>>N;
        vector<int>arr(N);
        
        for(int i=0 ; i<N ; i++){
            cin>>arr[i];
        }
        int target;
        cin >> target;

        Solution ob;
        cout<<ob.findTargetSumWays(arr,target);
        cout<<"\n";
    }
    return 0;
}
// } Driver Code Ends

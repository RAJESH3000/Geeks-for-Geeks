//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
    //Function to check if brackets are balanced or not.
    bool ispar(string s)
    {
        // Your code here
        stack<char> str;
        int n=s.length();
        for(int i=0;i<n;i++){
            if(s[i]=='[' || s[i]=='{' || s[i]=='('){
                str.push(s[i]);
            }
            else if(s[i]==']' || s[i]=='}' || s[i]==')'){
                if(str.empty()) return false;
                else if(s[i]==')' && str.top()!='(')  return false;
                else if(s[i]==']' && str.top()!='[')  return false;
                else if(s[i]=='}' && str.top()!='{')  return false;
                else str.pop();
            }
        }
        if(str.empty()) return true;
        return false;
    }

};

//{ Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       Solution obj;
       if(obj.ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}
// } Driver Code Ends

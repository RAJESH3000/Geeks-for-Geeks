//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
private:
    bool f(int i,int target,int nums[],vector<vector<int>> &dp){
        if(target==0) return true;
        if(i==0) return (nums[0]==target);
        if(dp[i][target]!=-1) return dp[i][target];

        bool notTake=f(i-1,target,nums,dp);
        bool take=false;
        if(nums[i]<=target) take=f(i-1,target-nums[i],nums,dp);

        return dp[i][target]=take | notTake;
    }
    
public:
    int equalPartition(int n, int nums[])
    {
        // code here
        int sum=0;
        for(int i=0;i<n;i++) sum+=nums[i];
        if(sum%2) return false;
        int target=sum/2;

        vector<vector<int>> dp(n,vector<int>(target+1,-1));

        return f(n-1,target,nums,dp);
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        if(ob.equalPartition(N, arr))
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
    return 0;
}
// } Driver Code Ends

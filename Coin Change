//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
    private:
    long long int f(int i,int target,int coins[],vector<vector<long long int>>& dp){
        if(i==0){
            return target%coins[0]==0;
        }

        if(dp[i][target]!=-1) return dp[i][target];
        long long int notTake=f(i-1,target,coins,dp);
        long long int take=0;
        if(coins[i]<=target) take=f(i,target-coins[i],coins,dp);

        return dp[i][target]=take+notTake;
    }

  public:
    long long int count(int coins[], int n, int sum) {

        // code here.
        vector<vector<long long int>> dp(n,vector<long long int>(sum+1,-1));
        return f(n-1,sum,coins,dp);
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int sum, N;
        cin >> sum >> N;
        int coins[N];
        for (int i = 0; i < N; i++) cin >> coins[i];
        Solution ob;
        cout << ob.count(coins, N, sum) << endl;
    }

    return 0;
}


// } Driver Code Ends

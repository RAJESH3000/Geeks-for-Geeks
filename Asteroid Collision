//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> asteroidCollision(int n, vector<int> &arr) {
        // code here
        stack<int> s;
        for(int i=0;i<n;i++){
            if(s.empty() || arr[i]>0) s.push(arr[i]);
            else{
                while(true){
                    if(s.top()<0)
                    {
                        s.push(arr[i]);
                        break;
                    }
                    else if(s.top()==-(arr[i]))
                    {
                        s.pop();
                        break;
                    }
                    else if(s.top()>-(arr[i]))
                    {
                        break;
                    }
                    else
                    {
                        s.pop();
                        if(s.empty())
                        {
                            s.push(arr[i]);
                            break;
                        }
                    }
                }
            }
        }
        vector<int> res(s.size(),0);
        for(int i=s.size()-1;i>=0;i--)
        {
            res[i]=s.top();
            s.pop();
        }
        return res;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;

        vector<int> asteroids(N);
        for (int i = 0; i < N; i++) cin >> asteroids[i];

        Solution obj;
        vector<int> ans = obj.asteroidCollision(N, asteroids);
        for (auto &it : ans) cout << it << ' ';
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends

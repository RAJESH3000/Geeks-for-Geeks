//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

vector<long long int>dp(100001 , 0);
class Solution {
 private:
    long long int f(int n,vector<long long int>& dp,long long int mod){
        if(n<=1) return n;
        if(dp[n]!=-1) return dp[n];
        return (dp[n]=f(n-1,dp,mod)+f(n-2,dp,mod))%mod;
    }
    
  public:
    long long int topDown(int n) {
        // code here
        long long int mod=1e9+7;
        vector<long long int> dyp(n+1,-1);
        return f(n,dp,mod);
    }
    long long int bottomUp(int n) {
        // code here
        long long int mod = 1e9+7;
        long long int prev2=0;
        long long int prev=1;
        for(int i=2;i<=n;i++){
            long long int curi=(prev+prev2)%mod;
            prev2=prev;
            prev=curi;
        }
        return prev%mod;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        for (int i = 0; i < 100001; i++) dp[i] = -1;
        int n;
        cin >> n;
        Solution obj;
        long long int topDownans = obj.topDown(n);
        long long int bottomUpans = obj.bottomUp(n);
        if (topDownans != bottomUpans) cout << -1 << "\n";
        cout << topDownans << "\n";
    }
}
// } Driver Code Ends
